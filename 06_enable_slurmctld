#!/bin/bash
# ------------------------------------------------------------------
# Install slurm.conf and slurmctld.service
# ------------------------------------------------------------------

set -e

# Copy config file
cp ./slurm.conf /etc/slurm/slurm.conf
chown slurm:rocky /etc/slurm/slurm.conf
chmod 664 /etc/slurm/slurm.conf

# Determine local hostname (short form)
HOSTNAME=$(hostname -s)

# Get IPv4 address for eth0
IPADDR=$(ip -4 addr show eth0 | awk '/inet / {print $2}' | cut -d/ -f1)

# Ensure both values were retrieved
if [[ -z "$HOSTNAME" || -z "$IPADDR" ]]; then
    echo "Error: could not determine hostname or IP for eth0."
    exit 1
fi

# File in current directory
CONF="/etc/slurm/slurm.conf"

# Replace existing SlurmctldHost line or append if missing
if grep -q '^SlurmctldHost=' "$CONF"; then
    sed -i "s|^SlurmctldHost=.*|SlurmctldHost=${HOSTNAME}(${IPADDR})|" "$CONF"
else
    echo "SlurmctldHost=${HOSTNAME}(${IPADDR})" >> "$CONF"
fi

echo "Updated SlurmctldHost to ${HOSTNAME}(${IPADDR}) in $(realpath "$CONF")"

# Copy systemd unit file
cp ./slurmctld.service /etc/systemd/system/slurmctld.service

# Reload systemd so it sees the new unit
systemctl daemon-reload

# Make these files accessible without direct pathing it
{
  echo ''
  echo '# --- Slurm environment setup ---'
  echo 'export PATH=/opt/slurm/current/bin:$PATH'
} >> /etc/profile.d/slurm.sh

chmod 644 /etc/profile.d/slurm.sh

# Check for slurmdbd binary before enabling service
if [ -x /opt/slurm/current/sbin/slurmctld ]; then
    echo "Found /opt/slurm/current/sbin/slurmctld"
    echo "Enabling and starting slurmctld..."
    systemctl enable --now slurmctld
    echo "slurmctld enabled successfully."
else
    echo "WARNING: /opt/slurm/current/sbin/slurmctld not found."
    echo "You likely need to create a symlink to your installed Slurm version, e.g.:"
    echo "  ln -s /opt/slurm/25.05.3-20251003 /opt/slurm/current"
    echo "Once the symlink exists, rerun: systemctl enable --now slurmctld"
fi
